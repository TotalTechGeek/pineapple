"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1830],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=s,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6260:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(7462),s=(n(7294),n(3905));const a={tags:["v0.8.0","patch","major"],sidebar_position:4,date:new Date("2022-05-18T00:00:00.000Z"),authors:[{name:"Jesse Mitchell",title:"Developer of Pineapple",url:"https://github.com/TotalTechGeek",image_url:"https://github.com/TotalTechGeek.png"}]},o="Extending Interchange Formats & Subset Testing (v0.8.0)",i={permalink:"/blog/v0.8.0",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/v0.8.0.md",source:"@site/blog/v0.8.0.md",title:"Extending Interchange Formats & Subset Testing (v0.8.0)",description:"Hello!",date:"2022-05-18T00:00:00.000Z",formattedDate:"May 18, 2022",tags:[{label:"v0.8.0",permalink:"/blog/tags/v-0-8-0"},{label:"patch",permalink:"/blog/tags/patch"},{label:"major",permalink:"/blog/tags/major"}],readingTime:.93,hasTruncateMarker:!1,authors:[{name:"Jesse Mitchell",title:"Developer of Pineapple",url:"https://github.com/TotalTechGeek",image_url:"https://github.com/TotalTechGeek.png",imageURL:"https://github.com/TotalTechGeek.png"}],frontMatter:{tags:["v0.8.0","patch","major"],sidebar_position:4,date:"2022-05-18T00:00:00.000Z",authors:[{name:"Jesse Mitchell",title:"Developer of Pineapple",url:"https://github.com/TotalTechGeek",image_url:"https://github.com/TotalTechGeek.png",imageURL:"https://github.com/TotalTechGeek.png"}]},prevItem:{title:"Supercharging Pineapple with Property Based Testing (v0.9.0)",permalink:"/blog/v0.9.0"},nextItem:{title:"Improving Snapshots (v0.7.0)",permalink:"/blog/v0.7.0"}},l={authorsImageUrls:[void 0]},p=[],c={toc:p};function u(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Hello!"),(0,s.kt)("p",null,"This patch introduces the ability to select your output format, which should help with editor integrations in the future."),(0,s.kt)("p",null,"If you use ",(0,s.kt)("inlineCode",{parentName:"p"},"OUTPUT_FORMAT=JSON")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"-f json"),", you are able to have Pineapple output to an ndjson stream which should be more easily parsable by a program."),(0,s.kt)("p",null,"For reference:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"\u2714 Passed test (fib): 1\n\u2714 Passed test (fib): 3\n\u2714 Passed test (fib): 10\n\u2714 Passed test (add): 1, 2\n\u2714 Passed test (add): '4', 3 throws\n\u2714 Passed test (add): 1, '0' throws\n\u2714 Passed test (add): -1, 1\n\u2714 Passed test (add): -1, 1 to 0\n\u2716 Failed test (add): -1, 1 to -1\n")),(0,s.kt)("p",null,"Will become the following in JSON mode:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'{"type":"Success","name":"fib","input":"1","file":"file:///Users/jesse/Documents/Projects/pineapple/test/math.js:39"}\n{"type":"Success","name":"fib","input":"3","file":"file:///Users/jesse/Documents/Projects/pineapple/test/math.js:40"}\n{"type":"Success","name":"fib","input":"10","file":"file:///Users/jesse/Documents/Projects/pineapple/test/math.js:41"}\n{"type":"Success","name":"add","input":"1, 2","file":"file:///Users/jesse/Documents/Projects/pineapple/test/math.js:2"}\n{"type":"Success","name":"add","input":"\'4\', 3 throws","file":"file:///Users/jesse/Documents/Projects/pineapple/test/math.js:3"}\n{"type":"Success","name":"add","input":"1, \'0\' throws","file":"file:///Users/jesse/Documents/Projects/pineapple/test/math.js:4"}\n{"type":"Success","name":"add","input":"-1, 1","file":"file:///Users/jesse/Documents/Projects/pineapple/test/math.js:5"}\n{"type":"Success","name":"add","input":"-1, 1 to 0","file":"file:///Users/jesse/Documents/Projects/pineapple/test/math.js:6"}\n{"type":"Failure","name":"add","input":"-1, 1 to -1","message":"- Expected\\n+ Received\\n\\n- -1\\n+ 0","file":"file:///Users/jesse/Documents/Projects/pineapple/test/math.js:7"\n')),(0,s.kt)("p",null,"This release also introduces the ability to run a subset of tests using the ",(0,s.kt)("inlineCode",{parentName:"p"},"--only")," flag."),(0,s.kt)("p",null,"Additionally, it adds the file name & line number to failed test output (even in pretty mode), which should make it easier to jump to your test cases."))}u.isMDXComponent=!0}}]);