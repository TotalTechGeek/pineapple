"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Intro","href":"/docs/intro","docId":"intro"},{"type":"link","label":"Continuous Testing","href":"/docs/watch-mode","docId":"watch-mode"},{"type":"category","label":"Writing Tests","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"The Basics","href":"/docs/writing-tests/the-basics","docId":"writing-tests/the-basics"},{"type":"link","label":"Higher Order Functions","href":"/docs/writing-tests/higher-order-functions","docId":"writing-tests/higher-order-functions"},{"type":"link","label":"Fuzz Testing","href":"/docs/writing-tests/fuzzing-property-based","docId":"writing-tests/fuzzing-property-based"},{"type":"link","label":"More Complex Tests","href":"/docs/writing-tests/more-complex-tests","docId":"writing-tests/more-complex-tests"},{"type":"link","label":"Testing Classes","href":"/docs/writing-tests/testing-classes","docId":"writing-tests/testing-classes"},{"type":"link","label":"Adding Methods to Pineapple","href":"/docs/writing-tests/adding-methods-to-pineapple","docId":"writing-tests/adding-methods-to-pineapple"},{"type":"link","label":"Setup and Teardown","href":"/docs/writing-tests/setup-and-teardown","docId":"writing-tests/setup-and-teardown"}]},{"type":"category","label":"Scenario Testing","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/docs/scenario-testing/introduction","docId":"scenario-testing/introduction"},{"type":"link","label":"Changes from Cucumber","href":"/docs/scenario-testing/differences","docId":"scenario-testing/differences"},{"type":"link","label":"Data Tables","href":"/docs/scenario-testing/tables","docId":"scenario-testing/tables"}]},{"type":"category","label":"Framework Documentation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Output Format","href":"/docs/framework-documentation/output-format","docId":"framework-documentation/output-format"}]},{"type":"link","label":"Bun Support","href":"/docs/bun-support","docId":"bun-support"},{"type":"link","label":"Customizing Transpilation","href":"/docs/custom-transpilers","docId":"custom-transpilers"}]},"docs":{"bun-support":{"id":"bun-support","title":"Bun Support","description":"Starting in v0.12.0, Pineapple can leverage Bun to run your tests.","sidebar":"tutorialSidebar"},"custom-transpilers":{"id":"custom-transpilers","title":"Customizing Transpilation","description":"Starting in v0.16.0, Pineapple has implemented the ability to pull source a custom transpiler function for running your code. While this is not necessary for most projects (Pineapple should be able to run TypeScript and React out of the box), it might be necessary if your project uses numerous plugins, or belongs to Svelte / similar.","sidebar":"tutorialSidebar"},"framework-documentation/output-format":{"id":"framework-documentation/output-format","title":"Output Format","description":"Description","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Intro","description":"What is this?","sidebar":"tutorialSidebar"},"scenario-testing/differences":{"id":"scenario-testing/differences","title":"Changes from Cucumber","description":"Explanation","sidebar":"tutorialSidebar"},"scenario-testing/introduction":{"id":"scenario-testing/introduction","title":"Introduction","description":"Introduced officially in v0.14.0, Pineapple now includes a simple Scenario testing framework to enable developers to write more advanced tests without pulling in another framework / taking a cumbersome approach.","sidebar":"tutorialSidebar"},"scenario-testing/tables":{"id":"scenario-testing/tables","title":"Data Tables","description":"Since data tables are common in scenario frameworks, Pineapple exposes a few utilities for importing data tables as arbitraries (which makes it easier to try a handful of possibilities).","sidebar":"tutorialSidebar"},"watch-mode":{"id":"watch-mode","title":"Continuous Testing","description":"Starting in v0.11.0, Pineapple is capable of running tests continuously while you make changes to your project.","sidebar":"tutorialSidebar"},"writing-tests/adding-methods-to-pineapple":{"id":"writing-tests/adding-methods-to-pineapple","title":"Adding Methods to Pineapple","description":"Because there may be situations where you wish to use additional functions inside of your test cases, Pineapple gives you the ability to expose new methods to the test clauses.","sidebar":"tutorialSidebar"},"writing-tests/fuzzing-property-based":{"id":"writing-tests/fuzzing-property-based","title":"Fuzz Testing","description":"General Use","sidebar":"tutorialSidebar"},"writing-tests/higher-order-functions":{"id":"writing-tests/higher-order-functions","title":"Higher Order Functions","description":"If you have a particular case where a you wish to test a function that returns a function (perhaps through currying or just as a natural API Design choice), Pineapple can handle that inline as well!","sidebar":"tutorialSidebar"},"writing-tests/more-complex-tests":{"id":"writing-tests/more-complex-tests","title":"More Complex Tests","description":"While in many cases, you should be able to write your test cases inline writing Pineapple test declarations, you may come across cases where your unit test may require a bit more setup than just invoking a function.","sidebar":"tutorialSidebar"},"writing-tests/setup-and-teardown":{"id":"writing-tests/setup-and-teardown","title":"Setup and Teardown","description":"Continuing down the path of writing more complex tests with Pineapple, there may be certain situations where you need to perform some additional setup & teardown. While not strictly required, these are recommended to be embedded in a .test.js file.","sidebar":"tutorialSidebar"},"writing-tests/testing-classes":{"id":"writing-tests/testing-classes","title":"Testing Classes","description":"Normal Classes","sidebar":"tutorialSidebar"},"writing-tests/the-basics":{"id":"writing-tests/the-basics","title":"The Basics","description":"\\"Returns\\" / \\"Resolves\\" Statements","sidebar":"tutorialSidebar"}}}')}}]);