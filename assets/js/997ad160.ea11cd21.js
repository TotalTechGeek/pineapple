"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6333],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),f=l(n),d=a,m=f["".concat(p,".").concat(d)]||f[d]||c[d]||i;return n?r.createElement(m,s(s({ref:t},u),{},{components:n})):r.createElement(m,s({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=f;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var l=2;l<i;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2857:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:3},s="Generating High Quality Input",o={unversionedId:"writing-tests/writing-fakes",id:"writing-tests/writing-fakes",title:"Generating High Quality Input",description:"Faker.js Support in Pineapple",source:"@site/docs/writing-tests/writing-fakes.md",sourceDirName:"writing-tests",slug:"/writing-tests/writing-fakes",permalink:"/docs/writing-tests/writing-fakes",draft:!1,editUrl:"https://github.com/TotalTechGeek/pineapple/tree/master/website/docs/writing-tests/writing-fakes.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Fuzz Testing",permalink:"/docs/writing-tests/fuzzing-property-based"},next:{title:"More Complex Tests",permalink:"/docs/writing-tests/more-complex-tests"}},p={},l=[{value:"Faker.js Support in Pineapple",id:"fakerjs-support-in-pineapple",level:2}],u={toc:l};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"generating-high-quality-input"},"Generating High Quality Input"),(0,a.kt)("h2",{id:"fakerjs-support-in-pineapple"},"Faker.js Support in Pineapple"),(0,a.kt)("p",null,"Starting in ",(0,a.kt)("inlineCode",{parentName:"p"},"v0.18.0"),", Pineapple now has first-class support for ",(0,a.kt)("a",{parentName:"p",href:"https://fakerjs.dev/"},"Faker.js"),", a library that generates high-quality mock data for testing."),(0,a.kt)("p",null," With this new feature, Pineapple users can now apply the ",(0,a.kt)("inlineCode",{parentName:"p"},"@faker")," annotation to create high quality mocks in conjunction with our existing fuzz technology."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"/* in a `.test.ts` file somewhere */\n\n/**\n * @faker\n */\nexport function User (faker: Faker): User {\n    return {\n        userId: faker.datatype.uuid(),\n        username: faker.internet.userName(),\n        email: faker.internet.email(),\n        avatar: faker.image.avatar(),\n        password: faker.internet.password(),\n        birthdate: faker.date.birthdate(),\n    }\n}\n")),(0,a.kt)("p",null,"This function takes in the Faker instance and returns an object that represents a user."),(0,a.kt)("p",null,"Once you have imported your ",(0,a.kt)("inlineCode",{parentName:"p"},"User")," function (via ",(0,a.kt)("inlineCode",{parentName:"p"},"@faker"),"), you can refer to it using ",(0,a.kt)("inlineCode",{parentName:"p"},"#User")," in a ",(0,a.kt)("inlineCode",{parentName:"p"},"@test")," case:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"/**\n * @test #User\n */\nexport function register(user: User) {\n    return {\n        success: true,\n        message: `Welcome ${user.username}!`\n    }\n}\n")),(0,a.kt)("p",null,"Producing output much like the following:"),(0,a.kt)("img",{alt:"An example of the snapshot functionality where the code is modified and the snapshot fails due to a renamed attribute",src:"/img/faker.png",width:"50%"}))}c.isMDXComponent=!0}}]);